// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Weatley.DataAccess;
using Weatley.Model.Enums;

namespace Weatley.Backend.Migrations
{
    [DbContext(typeof(WeatleyContext))]
    partial class WeatleyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Weatley.Model.Entities.Accounting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 3, 17, 13, 55, 59, 186, DateTimeKind.Local));

                    b.Property<double>("FinalPrice");

                    b.Property<int>("PaymentType");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounting");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Activity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndHour");

                    b.Property<Guid?>("HotelId");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartHour")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 3, 17, 13, 55, 59, 188, DateTimeKind.Local));

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Weatley.Model.Entities.BookedRoom", b =>
                {
                    b.Property<Guid>("BookingId");

                    b.Property<Guid>("RoomId");

                    b.Property<Guid>("Id");

                    b.HasKey("BookingId", "RoomId");

                    b.HasIndex("RoomId");

                    b.ToTable("BookedRoom");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Comment");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("EndDate");

                    b.Property<double>("Price");

                    b.Property<DateTime>("StartingDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 3, 17, 13, 55, 59, 190, DateTimeKind.Local));

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email");

                    b.Property<string>("IdentificationDocument");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Address");

                    b.Property<string>("Description");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Website");

                    b.HasKey("Id");

                    b.ToTable("Hotel");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Comment");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<double>("FinalPrice");

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(new DateTime(2018, 3, 17, 13, 55, 59, 195, DateTimeKind.Local));

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<bool?>("Available");

                    b.Property<string>("Description");

                    b.Property<Guid?>("HotelId");

                    b.Property<string>("Name");

                    b.Property<int>("ProductType");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Weatley.Model.Entities.ProductOrdered", b =>
                {
                    b.Property<Guid>("OrderId");

                    b.Property<Guid>("ProductId");

                    b.Property<string>("Comments");

                    b.Property<Guid>("Id");

                    b.Property<double>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrdered");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("CustomerId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Report");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("FloorNumber");

                    b.Property<Guid?>("HotelId");

                    b.Property<int>("RoomNumber");

                    b.Property<int>("RoomType");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Description");

                    b.Property<Guid?>("HotelId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("Weatley.Model.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid?>("HotelId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<int>("UserType");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Weatley.Model.Entities.Accounting", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Customer", "Customer")
                        .WithMany("Accountings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Activity", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Hotel", "Hotel")
                        .WithMany("Activities")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.BookedRoom", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Booking", "Booking")
                        .WithMany("BookedRooms")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Weatley.Model.Entities.Room", "Room")
                        .WithMany("BookedRooms")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Booking", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Order", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Product", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Hotel", "Hotel")
                        .WithMany("Products")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.ProductOrdered", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Order", "Order")
                        .WithMany("ProductsOrdered")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Weatley.Model.Entities.Product", "Product")
                        .WithMany("ProductsOrdered")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Report", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Customer", "Customer")
                        .WithMany("Reports")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Room", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.Service", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Hotel", "Hotel")
                        .WithMany("Services")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Weatley.Model.Entities.User", b =>
                {
                    b.HasOne("Weatley.Model.Entities.Hotel", "Hotel")
                        .WithMany("Users")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
